@import '../settings';

.h-margin-auto {
  margin: auto;
}
.h-direction-column {
  display: flex;
  flex-direction: column;
}
.h-same-height {
  display: flex;
  flex-wrap: wrap;
}
.h-flex-nowrap {
  display: flex;
  flex-wrap: nowrap;
}
.h-vertical-center {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}
.h-align-centerÂ  {
  display: flex;
  align-items: center;
}
.h-space-between {
  display: flex;
  justify-content: space-between;
}
.h-center {
  display: flex;
  justify-content: center;
}
.h-space-around {
  display: flex;
  justify-content: space-around;
}
.h-flex-end {
  display: flex;
  justify-content: flex-end;
}
.h-flex-grow-1 {
  flex-grow: 1 !important;
}
.h-height-100 {
  height: 100% !important;
}
.h-width-100 {
  width: 100% !important;
}
.h-width-auto {
  width: auto !important;
}
.h-max-width-0 {
  max-width: 0 !important;
}
.h-clear-none {
  clear: none !important;
}
.h-cursor-pointer {
  cursor: pointer !important;
}
// text
.h-text-400 {
  font-weight: 400 !important;
}
.h-text-500 {
  font-weight: 500 !important;
}
.h-text-600 {
  font-weight: 600 !important;
}
.h-text-700 {
  font-weight: 700 !important;
}
.h-text-24 {
  font-size: 1.5rem !important;
}
.h-text-22 {
  font-size: rem-calc(22) !important;
}
.h-text-20 {
  font-size: 1.25rem !important;
}
.h-text-18 {
  font-size: 1.125rem !important;
}
.h-text-16 {
  font-size: 1rem !important;
}
.h-text-14 {
  font-size: 0.875rem !important;
}
.h-text-12 {
  font-size: 0.75rem !important;
}
.h-text-uppercase {
  text-transform: uppercase !important;
}
.h-text-lowercase {
  text-transform: lowercase !important;
}
.h-text-capitalize {
  text-transform: capitalize !important;
}
.h-text-initial {
  text-transform: initial !important;
}
// text align
.h-text-center {
  text-align: center !important;
}
.h-text-right {
  text-align: right !important;
}
.h-text-left {
  text-align: left !important;
}
.h-vertical-align-middle {
  vertical-align: middle !important;
}
.h-vertical-align-top {
  vertical-align: top !important;
}
.h-vertical-align-bottom {
  vertical-align: bottom !important;
}
// white space
.h-text-nowrap {
  white-space: nowrap !important;
}
// display
.h-display-none {
  display: none !important;
}
.h-display-inline-block {
  display: inline-block !important;
}
.h-display-block {
  display: block !important;
}
.h-display-flex {
  display: flex !important;
}
// position
.h-relative {
  position: relative !important;
}
// borders
.h-border-none {
  border: none !important;
}
.h-border-radius {
  border-radius: $global-radius !important;
}
// background & color
$colors: (
  'white': $white,
  'black': $black,
  'primary': $primary-color,
  'secondary': $secondary-color,
  'light-secondary': $light-secondary,
  'dark-gray': $dark-gray,
  'medium-gray': $medium-gray,
  'light-gray': $light-gray,
  'alert': $alert-color,
  'success': $success-color,
);

@each $name, $color in $colors {
  .h-background-#{$name} {
    background-color: $color !important;
  }
}
@each $name, $color in $colors {
  .h-color-#{$name} {
    color: $color !important;
  }
}

// others
.h-pure-button {
  border: none;
  background-color: transparent;
  display: block;
  width: 100%;
  padding: 0;
}

$mp-prefix: h;
// height & width
$sizes: (
  w: max-width,
  h: max-height,
);
$sizesHalf: (
  '': 0,
  5: 0.5rem,
);
@each $key, $value in $sizes {
  @for $i from 0 through 6 {
    @each $halfKey, $halfValue in $sizesHalf {
      .#{$mp-prefix}-#{$value}-#{$i}#{$halfKey} {
        #{$value}: $i * 1rem + $halfValue !important;
      }
    }
  }
}

// margin & padding
$keys: (
  m: margin,
  p: padding,
);
$half: (
  '': 0,
  5: 0.5rem,
  25: 0.25rem,
  75: 0.75rem,
);

@each $key, $value in $keys {
  @for $i from 0 through 9 {
    @each $halfKey, $halfValue in $half {
      .#{$mp-prefix}-#{$key}-#{$i}#{$halfKey} {
        #{$value}: $i * 1rem + $halfValue !important;
      }
      .#{$mp-prefix}-#{$key}x-#{$i}#{$halfKey} {
        #{$value}-left: $i * 1rem + $halfValue !important;
        #{$value}-right: $i * 1rem + $halfValue !important;
      }
      .#{$mp-prefix}-#{$key}y-#{$i}#{$halfKey} {
        #{$value}-top: $i * 1rem + $halfValue !important;
        #{$value}-bottom: $i * 1rem + $halfValue !important;
      }
      .#{$mp-prefix}-#{$key}t-#{$i}#{$halfKey} {
        #{$value}-top: $i * 1rem + $halfValue !important;
      }
      .#{$mp-prefix}-#{$key}b-#{$i}#{$halfKey} {
        #{$value}-bottom: $i * 1rem + $halfValue !important;
      }
      .#{$mp-prefix}-#{$key}r-#{$i}#{$halfKey} {
        #{$value}-right: $i * 1rem + $halfValue !important;
      }
      .#{$mp-prefix}-#{$key}l-#{$i}#{$halfKey} {
        #{$value}-left: $i * 1rem + $halfValue !important;
      }
    }
  }
}

@include small-only {
  @each $key, $value in $keys {
    @for $i from 0 through 9 {
      @each $halfKey, $halfValue in $half {
        .#{$mp-prefix}-#{$key}-sm-#{$i}#{$halfKey} {
          #{$value}: $i * 1rem + $halfValue !important;
        }
        .#{$mp-prefix}-#{$key}x-sm-#{$i}#{$halfKey} {
          #{$value}-left: $i * 1rem + $halfValue !important;
          #{$value}-right: $i * 1rem + $halfValue !important;
        }
        .#{$mp-prefix}-#{$key}y-sm-#{$i}#{$halfKey} {
          #{$value}-top: $i * 1rem + $halfValue !important;
          #{$value}-bottom: $i * 1rem + $halfValue !important;
        }
        .#{$mp-prefix}-#{$key}t-sm-#{$i}#{$halfKey} {
          #{$value}-top: $i * 1rem + $halfValue !important;
        }
        .#{$mp-prefix}-#{$key}b-sm-#{$i}#{$halfKey} {
          #{$value}-bottom: $i * 1rem + $halfValue !important;
        }
        .#{$mp-prefix}-#{$key}r-sm-#{$i}#{$halfKey} {
          #{$value}-right: $i * 1rem + $halfValue !important;
        }
        .#{$mp-prefix}-#{$key}l-sm-#{$i}#{$halfKey} {
          #{$value}-left: $i * 1rem + $halfValue !important;
        }
      }
    }
  }
}
